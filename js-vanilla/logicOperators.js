|| - находит первое истинное значение и ВОЗВРАЩАЕТ его, если все значения 'false' тогда 
     ВОЗВРАЩАЕТ последнее из списка значений

     alert( 1 || 0 ); // 1
     alert( true || 'no matter what' ); // true
     
     alert( null || 1 ); // 1 (первое истинное значение)
     alert( null || 0 || 1 ); // 1 (первое истинное значение)
     alert( undefined || null || 0 ); // 0 (поскольку все ложно, возвращается последнее значение)

&& - находит первое ложное значение и ВОЗВРАЩАЕТ его, если все операнды 'true' тогда ВОЗВРАЩАЕТ последний операнд

    // Если первый операнд истинный,
    // И возвращает второй:
    alert( 1 && 0 ); // 0
    alert( 1 && 5 ); // 5

    // Если первый операнд ложный,
    // И возвращает его. Второй операнд игнорируется
    alert( null && 5 ); // null
    alert( 0 && "no matter what" ); // 0


ПРИОРИТЕТ ОПЕРАТОРА && БОЛЬШЕ, ЧЕМ У ||


! - Оператор принимает один аргумент и выполняет следующие действия:

    1)Сначала приводит аргумент к логическому типу true/false.
    2)Затем возвращает противоположное значение.

    !! - используют для преобразования значений к логическому типу

Приоритет НЕ ! является наивысшим из всех логических операторов

//числа со знаком "-" в логическом котексте true
//null, 0, undefined, Nan - в логическом котексте false


?? - возвращает первый аргумент, если он не null/undefined, иначе второй

let firstName = null;
let lastName = null;
let nickName = "Суперкодер";

// показывает первое истинное значение:
alert(firstName || lastName || nickName || "Аноним"); // Суперкодер
alert(firstName ?? lastName ?? nickName ?? "Аноним"); // Суперкодер

// оператор || не различает false, 0, пустую строку "" и null/undefined, для этого и был добавлен 

let height = 0;

alert(height || 100); // 100
alert(height ?? 100); // 0





